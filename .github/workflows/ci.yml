name: Continuous integration

on:
  push:
    branches: 
    - main
  pull_request:
    branches:
    - main 
  
jobs:
  frontend-test: 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Launch test 
      run: npm test
  
  backend-test: 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
    - uses: actions/checkout@v4

    - name: Configure JDK 21
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '21'
        cache: gradle

    - name: Compiler et tester le backend
      run: |
        chmod +x gradlew
        ./gradlew build

    - name: Lint Backend Code
      run: ./gradlew checkstyleMain
  # integration-test: 
    
  #   runs-on: ubuntu-latest
  #   needs: [backend-test, frontend-test]
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Start components
  #     run: docker compose -f docker-compose.build.yml up -d 

  #   - name: Run integration test 
  #     run: |
  #       wget -q https://github.com/grafana/k6/releases/download/v0.37.0/k6-v0.37.0-linux-amd64.tar.gz
  #       tar -xzf k6-v0.37.0-linux-amd64.tar.gz
  #       chmod +x k6-v0.37.0-linux-amd64/k6
  #       k6-v0.37.0-linux-amd64/k6 run script.js
  #     working-directory: k6

  #   - name: Stop components
  #     run: docker compose -f docker-compose.build.yml down 


  build-image:
    strategy:
      matrix:
        component: ["frontend", "backend"]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    # needs: [integration-test]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Log in to registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Build the Docker image
      uses: docker/build-push-action@v2
      with: 
        context: ${{ matrix.component }}
        file: ${{ matrix.component }}/Dockerfile
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/spm-${{ matrix.component }}:${{ github.ref_name }}